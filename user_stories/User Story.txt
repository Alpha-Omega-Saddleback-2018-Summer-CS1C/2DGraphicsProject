David <DavidE92@live.com>
Brett <bsaiki0@saddleback.edu>
Justis <justis.ketcham@gmail.com>
Greg <ggraffius0@saddleback.edu>

#1 As a computer programmer, I can manually input a file to create shapes.
a) Description: A file can be passed into the program which creates shapes to be drawn. Any error will result in the program notifying the user and exiting.
b) Tasks:
  - Create a parser to define shape parameters
    - Check for syntax errors
    - Notify and abort on error
  - Add shapes to the shape vector
c) Tests:
  - Verify that a shape will be added to the vector
  - Verify that any syntax errors will generate an error and cause the program to exit
d) Assignee:
  - Brett: implement file-to-token converter
  - Greg: implement token-to-vector converter
e) Estimation: 45 hours
f) Priority: 3
g) Goals:
	- (Advanced) user is able to create file to parameterize shapes
	- Adds shapes to the shape vector
	- Any errors in syntax will result in the program aborting

#2 As a computer programmer, I can receive verbose errors from the file parser
a) Description: Any parser errors will print detailed errors or suggest fixes to the user
b) Tasks:
	- Create an error object (possibly)
	- Print error to screen
c) Tests:
	- Verify that syntax errors result in accurate detailed errors
d) Assignee:
	- Brett: implement error logic
	- Justis: implement error object
e) Estimation: 30 hours
f) Priority: 10
g) Goals: 
	- Prints errors and suggests fixes to user before exiting program

#3 As a teacher, I can login to the program
a) Description: Users can login to the program with a username and password. Program will only allow access when username and password matches
b) Tasks:	
	- Create username and password logic
	- Create file to store username and password
c) Tests:
	- Verify that program will only allow access when username and password match
	- Verify that username and password will persist past a single use
d) Assignee:
	- Brett: implement matcher
	- David: implement saving and loading username and passwords
e) Estimation: 12 hours
f) Priority: 2
g) Goals:
	- A user can create a username and password and login

#4 As a user, I can create multiple logins
a) Description: allows the user to log in or create a new login
b) Tasks: 
	-read and write to a txt file
	-create an easy to use interface
	-possibly encrypt the txt file
c) Tests: 	
	-verify a new login works
	-verify old login still works	
d) Assignee:
	-Greg
e) Estimation: 9 hours
f) Priority: 9
g) Goals:	
	- Mutliple users can login

#5 As a student, I can render shapes
a) Description: Renders shapes from the shape vector
b) Tasks:
	- Create a function to render an object using QPainter
c) Tests:
	- Verify that shape is rendered
d) Assignee:
	- David 
e) Estimation: 100 hrs
f) Priority: 1
g) Goals:
	- draws any shape 

#6 As a student, I can define multiple shapes
a) Description: Allows for a abstract shape class to define other shapes
b) Tasks:
	- The shape class inheritance is effective enough to derive other shapes
c) Tests:
	- Multiple shapes can be derived
d) Assignee:
	- David
e) Estimation: 16 hours
f) Priority: 4
g) Goals:
	- Multiple shapes can be created

#7 As a user, I can change user-defined shapes and save to a file
a) Description: Allows the user to update or move the shapes then save changes
b) Tasks:
	-allows shapes to visually move
	-changes are saved
c) Tests:
	- verify shapes can move
	- verify that shapes are saved
d) Assignee:
	- Brett
e) Estimation: 16hrs
f) Priority: 5
g) Goals:
	- Shapes can be changed
	- Shapes will persist past runtime


#8 As a student, I can calculate the dimensions, perimeter, or area of any shape
a) Description: Any shape on the shape vector will have its dimensions, perimeter and area displayed
b) Tasks:
	- Implement math for calculating perimeter and area
	- Use QPainter to print to screen
c) Tests:
	- Verify that the values displayed are correct
d) Assignee:
	- Greg
e) Estimation: 24 hours
f) Priority: 6
g) Goals:
	- The dimensions, perimeter and/or area can be calculated for any shape

#9 As a user, my username and password will be "encrypted"
a) Description:	Any saved usernames or passwords will be encrypted (or not visible as a character)
b) Tasks: 
	- "Encrypt" any saved passwords
		- Consider bitshifts, arithmetic operations
c) Tests:
	- Works and doesnt crash
d) Assignee:
	- Justis
e) Estimation: 18 hours
f) Priority: 8
g) Goals:
	- Passwords and usernames are not visible as characters

#10 As a tester, I know who developed the program and who to contact if I discover bugs
a) Description:	Team logo and information is included with program
b) Tasks:
	- Render team logo / information
	- README file
c) Tests:
	- Verify that team logo and information is rendered
d) Assignee:
	- Justis
e) Estimation: 9 hours
f) Priority: 7
g) Goals:
	- Anyone who needs to contact us knows who to contact
	
	